#+TITLE: TLS

TLS superseeds SSL, it's used to encrypt communication between two parties, often over the transport layer (e.g. TCP).

* Digital Certificates

Communication starts with the client and server agreeing to use a certain [[https://en.wikipedia.org/wiki/Cipher_suite][cipher suite]].  The server will then provide its [[https://en.wikipedia.org/wiki/Public_key_certificate][Digital Certificate]]:

#+begin_src python
import ssl
# https://github.com/mcepl/M2Crypto
import M2Crypto

certificate = ssl.get_server_certificate(('www.gnu.org', 443))
x509 = M2Crypto.X509.load_cert_string(certificate)
x509.get_issuer.as_text()
# "C=US, O=Let's Encrypt, CN=R3"
x509.get_subject().as_text()
# "CN=wildebeest1p.gnu.org"
#+end_src

Note [[https://en.wikipedia.org/wiki/X.509][x.509]] is the format used in TLS/SSL certificates.  In the above snippet we obtain information about the certificate of ~'www.gnu.org'~.  There are two principals associated with a certificate: the *issuer* and the *subject*.

First of all we obtain information about the issuer:
- ~C=US~ tells us that the issuer is located in the US
- ~O=Let's Encrypt~ is the organisation distributing the certificate ([[https://letsencrypt.org/][Let's Encrypt]])
- ~CN=R3~ [[https://letsencrypt.org/certificates/][R3]] is an intermediate certificate (~CN~ stands for "Common Name"), we will need to follow the certificate chain to fully verify this certificate:

  #+begin_src bash
$ openssl s_client -showcerts -servername www.gnu.org -connect www.gnu.org:443 </dev/null          
CONNECTED(00000003)
depth=2 C = US, O = Internet Security Research Group, CN = ISRG Root X1
verify return:1
depth=1 C = US, O = Let's Encrypt, CN = R3
verify return:1
depth=0 CN = wildebeest1p.gnu.org
verify return:1
# More output omitted
  #+end_src

Next we obtain information about the subject:
- ~CN=wildebeest1p.gnu.org~ this is the entity to whom the certificate is assigned
